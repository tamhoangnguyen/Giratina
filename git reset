[1mdiff --git a/BRT.py b/BRT.py[m
[1mindex ff5443f..6ebda2f 100644[m
[1m--- a/BRT.py[m
[1m+++ b/BRT.py[m
[36m@@ -94,21 +94,21 @@[m [mclass BST:[m
                     del nut_ht[m
                     break  [m
 [m
[31m-    # def duyet_LNR(self,goc = 0):[m
[31m-    #     nut_ht = goc[m
[31m-    #     if goc == 0:[m
[31m-    #         nut_ht = self.goc[m
[31m-    #     if nut_ht == None:[m
[31m-    #         return [][m
[31m-    #     else:[m
[31m-    #         kq = [][m
[31m-    #         kq_trai = self.duyet_LNR(nut_ht.left)[m
[31m-    #         for x in kq_trai:[m
[31m-    #             kq.append(x)[m
[31m-    #         kq.append(nut_ht.data)[m
[31m-    #         kq_phai = self.duyet_LNR(nut_ht.right)[m
[31m-    #         for x in kq_phai:[m
[31m-    #             kq.append(x)[m
[32m+[m[32m    def duyet_LNR(self,goc = 0):[m
[32m+[m[32m        nut_ht = goc[m
[32m+[m[32m        if goc == 0:[m
[32m+[m[32m            nut_ht = self.goc[m
[32m+[m[32m        if nut_ht == None:[m
[32m+[m[32m            return [][m
[32m+[m[32m        else:[m
[32m+[m[32m            kq = [][m
[32m+[m[32m            kq_trai = self.duyet_LNR(nut_ht.left)[m
[32m+[m[32m            for x in kq_trai:[m
[32m+[m[32m                kq.append(x)[m
[32m+[m[32m            kq.append(nut_ht.data)[m
[32m+[m[32m            kq_phai = self.duyet_LNR(nut_ht.right)[m
[32m+[m[32m            for x in kq_phai:[m
[32m+[m[32m                kq.append(x)[m
     #         return kq[m
     # def duyet_RNL(self,goc = 0):[m
     #     nut_ht = goc[m
[36m@@ -173,6 +173,7 @@[m [mdef main():[m
     for x in my_array:[m
         cay_nhi_phan.chen(x)[m
     print(cay_nhi_phan.duyet_NRL())[m
[32m+[m[32m    print(cay_nhi_phan.duyet_LNR())[m
     so_can_tim = int(input("S·ªë c·∫ßn t√¨m l√†?: "))    [m
     so_can_xoa = int(input("S·ªë c·∫ßn x√≥a l√†?: "))[m
     print(cay_nhi_phan.tim(so_can_tim))[m
